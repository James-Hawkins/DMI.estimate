}
variables.to.check <- c(
'bw_kg'
, 'adg_g_day'
, 'NDF_nutrition'
, 'CP_nutrition'
)
for (v in variables.to.check){
for (v2 in variables.to.check[ -c(which(variables.to.check == "CP_nutrition"))]  ){
cor <- cor(
sheep[complete.cases(sheep[,c('bw_kg' , 'CP_nutrition')]),'bw_kg']
,sheep[complete.cases(sheep[,c('bw_kg' , 'CP_nutrition')]),'CP_nutrition']
)
print(paste('correlation of is ' ,v ,v2, cor ))
}
}
for (v in variables.to.check){
for (v2 in variables.to.check[ -c(which(variables.to.check == "CP_nutrition"))]  ){
cor <- cor(
sheep[complete.cases(sheep[,c('bw_kg' , 'CP_nutrition')]),'bw_kg']
,sheep[complete.cases(sheep[,c('bw_kg' , 'CP_nutrition')]),'CP_nutrition']
)
print(paste('correlation of is ' ,v 'and ',v2,': ' cor ))
variables.to.check <- c(
'bw_kg'
, 'adg_g_day'
, 'NDF_nutrition'
, 'CP_nutrition'
)
for (v in variables.to.check){
for (v2 in variables.to.check[ -c(which(variables.to.check == "CP_nutrition"))]  ){
cor <- cor(
sheep[complete.cases(sheep[,c('bw_kg' , 'CP_nutrition')]),'bw_kg']
,sheep[complete.cases(sheep[,c('bw_kg' , 'CP_nutrition')]),'CP_nutrition']
)
print(paste('correlation of is ' ,v ,'and ',v2,': ' cor ))
for (v in variables.to.check){
for (v2 in variables.to.check[ -c(which(variables.to.check == "CP_nutrition"))]  ){
cor <- cor(
sheep[complete.cases(sheep[,c('bw_kg' , 'CP_nutrition')]),'bw_kg']
,sheep[complete.cases(sheep[,c('bw_kg' , 'CP_nutrition')]),'CP_nutrition']
)
print(paste('correlation of is ' ,v ,'and ',v2,': ' ,cor ))
}
}
variables.to.check <- c(
'bw_kg'
, 'adg_g_day'
, 'NDF_nutrition'
, 'CP_nutrition'
)
for (v in variables.to.check){
for (v2 in variables.to.check[ -c(which(variables.to.check == "CP_nutrition"))]  ){
cor <- cor(
sheep[complete.cases(sheep[,c('bw_kg' , 'CP_nutrition')]),'bw_kg']
,sheep[complete.cases(sheep[,c('bw_kg' , 'CP_nutrition')]),'CP_nutrition']
)
print(paste('correlation of is ' ,v ,'and ',v2,': ' ,cor ))
}
}
for (v in variables.to.check){
for (v2 in variables.to.check[ -c(which(variables.to.check == "CP_nutrition"))]  ){
cor <- cor(
sheep[complete.cases(sheep[,c(v, v2)]),'bw_kg']
,sheep[complete.cases(sheep[,c(v , v2)]),'CP_nutrition']
)
print(paste('correlation of is ' ,v ,'and ',v2,': ' ,cor ))
}
}
for (v in variables.to.check){
for (v2 in variables.to.check[ -c(which(variables.to.check == "CP_nutrition"))]  ){
cor <- cor(
sheep[complete.cases(sheep[,c(v, v2)]),v]
,sheep[complete.cases(sheep[,c(v , v2)]),v2]
)
print(paste('correlation of is ' ,v ,'and ',v2,': ' ,cor ))
}
}
for (v in variables.to.check){
for (v2 in variables.to.check[ -c(which(variables.to.check == "CP_nutrition"))]  ){
cor <- cor(
sheep[complete.cases(sheep[,c(v, v2)]),v]
,sheep[complete.cases(sheep[,c(v , v2)]),v2]
)
print(paste('correlation between ' ,v ,'and ',v2,': ' ,cor ))
}
}
variables.to.check <- c(
'bw_kg'
, 'adg_g_day'
, 'NDF_nutrition'
, 'CP_nutrition'
)
for (v in variables.to.check){
for (v2 in variables.to.check[ -c(which(variables.to.check == "CP_nutrition"))]  ){
cor <- cor(
sheep[complete.cases(sheep[,c(v, v2)]),v]
,sheep[complete.cases(sheep[,c(v , v2)]),v2]
)
print(paste('correlation between ' ,v ,'and ',v2,': ' ,cor ))
}
}
# Apply weights
mean.samp.sz <- mean(na.omit(sheep$T.Animals))
sheep[, 'reg.weight'] <-  sheep[, 'T.Animals'] / mean.samp.sz
sp.mod.1 <- lmer(
feed_intake_kg_d * 1000 ~  bw_kg
+  adg_g_day
+ CP_nutrition
+  NDF_nutrition
+ (1 | B.Code)
, weights = reg.weight
, data = sheep
)
r.squaredGLMM(sp.mod.1)
sp.mod.1 <- lmer(
feed_intake_kg_d * 1000 ~  bw_kg
+  adg_g_day
+ CP_nutrition
+  NDF_nutrition
+ Ash_nutrition
+ EE_nutrition
+ (1 | B.Code)
, weights = reg.weight
, data = sheep
)
r.squaredGLMM(sp.mod.1)
sp.mod.1 <- lmer(
feed_intake_kg_d * 1000 ~  bw_kg
+  adg_g_day
+ CP_nutrition
+  NDF_nutrition
+ Ash_nutrition
+ EE_nutrition
+ (1 | B.Code)
, weights = reg.weight
, data = sheep
)
r.squaredGLMM(sp.mod.1)[1]
r.squaredGLMM(sp.mod.1)
r.squaredGLMM(sp.mod.1)[1]
r.squaredGLMM(sp.mod.1)
r2.rfx <- r.squaredGLMM(sp.mod.1)[1]
r2.cbined < - r.squaredGLMM(sp.mod.1)[2]
r2.ffx < - r2.cbined - r2.rfx
r2.rfx <- r.squaredGLMM(sp.mod.1)[1]
r2.cbined < - r.squaredGLMM(sp.mod.1)[2]
r2.cbined <- r.squaredGLMM(sp.mod.1)[2]
r2.ffx <- r2.cbined - r2.rfx
r2.ffx
sp.mod.1 <- lmer(
feed_intake_kg_d * 1000 ~  bw_kg
+  adg_g_day
+ CP_nutrition
+  NDF_nutrition
+ Ash_nutrition
+ EE_nutrition
+ (1 | B.Code)
, weights = reg.weight
, data = sheep
)
sp.mod.1 <- lmer(
feed_intake_kg_d * 1000 ~  bw_kg
+  adg_g_day
+ CP_nutrition
+  NDF_nutrition
+ Ash_nutrition
+ EE_nutrition
+ (1 | B.Code)
, weights = reg.weight
, data = sheep
)
r2.rfx <- r.squaredGLMM(sp.mod.1)[1]
r2.cbined <- r.squaredGLMM(sp.mod.1)[2]
r2.ffx <- r2.cbined - r2.rfx
r2.ffx
r2.rfx <- r.squaredGLMM(gt.mod.1)[1]
r2.cbined <- r.squaredGLMM(gt.mod.1)[2]
r2.ffx <- r2.cbined - r2.rfx
r2.ffx
gt.mod.1 <- lmer(
feed_intake_kg_d * 1000 ~  bw_kg
+  adg_g_day
+ CP_nutrition
+  NDF_nutrition
+ EE_nutrition
+ Ash_nutrition
+ (1  | B.Code)
, weights = reg.weight
, data = goats
)
gt.mod.1
r.squaredGLMM(gt.mod.1)
summary(gt.mod.1)
coef(gt.mod.1)
confint(gt.mod.1)
r2.rfx <- r.squaredGLMM(gt.mod.1)[1]
r2.cbined <- r.squaredGLMM(gt.mod.1)[2]
r2.ffx <- r2.cbined - r2.rfx
r2.ffx
gt.mod.1 <- lmer(
feed_intake_kg_d * 1000 ~  bw_kg
+  adg_g_day
+ CP_nutrition
+  NDF_nutrition
+ EE_nutrition
+ Ash_nutrition
+ (1  | B.Code)
, weights = reg.weight
, data = goats
)
gt.mod.1
r.squaredGLMM(gt.mod.1)
gt.mod.1 <- lmer(
feed_intake_kg_d * 1000 ~  bw_kg
+  adg_g_day
+ CP_nutrition
+  NDF_nutrition
+ EE_nutrition
+ Ash_nutrition
+ (1  | B.Code)
, weights = reg.weight
, data = goats
)
gt.mod.1 <- lmer(
feed_intake_kg_d * 1000 ~  bw_kg
+  adg_g_day
+ CP_nutrition
+  NDF_nutrition
+ EE_nutrition
+ Ash_nutrition
+ (1  | B.Code)
#, weights = reg.weight
, data = goats
)
gt.mod.1
r.squaredGLMM(gt.mod.1)
r2.rfx <- r.squaredGLMM(gt.mod.1)[1]
r2.cbined <- r.squaredGLMM(gt.mod.1)[2]
r2.ffx <- r2.cbined - r2.rfx
r2.ffx
r.squaredGLMM(gt.mod.1)
r2.ffx <- r.squaredGLMM(gt.mod.1)[1]
r2.cbined <- r.squaredGLMM(gt.mod.1)[2]
r2.rfx <- r2.cbined - r2.rfx
r2.rfx
r2.ffx
gt.mod.1 <- lmer(
feed_intake_kg_d * 1000 ~  bw_kg
+  adg_g_day
+ CP_nutrition
+  NDF_nutrition
+ EE_nutrition
+ Ash_nutrition
+ (1  | B.Code)
#, weights = reg.weight
, data = goats
)
gt.mod.1
sp.mod.1 <- lmer(
feed_intake_kg_d * 1000 ~  bw_kg
+  adg_g_day
+ CP_nutrition
+  NDF_nutrition
+ Ash_nutrition
+ EE_nutrition
+ (1 | B.Code)
, weights = reg.weight
, data = sheep
)
r2.ffx <- r.squaredGLMM(sp.mod.1)[1]
r2.ffx <- r.squaredGLMM(sp.mod.1)[1]
r2.cbined <- r.squaredGLMM(sp.mod.1)[2]
r2.rfx <- r2.cbined - r2.rfx
r2.rfx
r2.ffx
sp.mod.1 <- lmer(
feed_intake_kg_d * 1000 ~  bw_kg
+  adg_g_day
+ CP_nutrition
+  NDF_nutrition
+ Ash_nutrition
+ EE_nutrition
+ (1 | B.Code)
, weights = reg.weight
, data = sheep
)
r2.ffx
sp.mod.1 <- lmer(
feed_intake_kg_d * 1000 ~  bw_kg
+  adg_g_day
+ CP_nutrition
+  NDF_nutrition
+ Ash_nutrition
+ EE_nutrition
+ (1 | B.Code)
, weights = reg.weight
, data = sheep
)
sp.mod.1 <- lmer(
feed_intake_kg_d * 1000 ~  bw_kg
+  adg_g_day
+ CP_nutrition
+  NDF_nutrition
+ Ash_nutrition
+ EE_nutrition
+ (1 | B.Code)
, weights = reg.weight
, data = sheep[sheep$bw_kg > mean(sheep$bw_kg ), ]
)
mean(sheep$bw_kg )
sp.mod.1 <- lmer(
feed_intake_kg_d * 1000 ~  bw_kg
+  adg_g_day
+ CP_nutrition
+  NDF_nutrition
+ Ash_nutrition
+ EE_nutrition
+ (1 | B.Code)
, weights = reg.weight
, data = sheep[sheep$bw_kg > mean(na.omit(sheep$bw_kg )), ]
)
r.squaredGLMM(sp.mod.1)
sp.mod.1 <- lmer(
feed_intake_kg_d * 1000 ~  bw_kg
+  adg_g_day
+ CP_nutrition
+  NDF_nutrition
+ Ash_nutrition
+ EE_nutrition
+ (1 | B.Code)
, weights = reg.weight
, data = sheep
# , data = sheep[sheep$bw_kg > mean(na.omit(sheep$bw_kg )), ]
)
r.squaredGLMM(sp.mod.1)[1]
sp.mod.1 <- lmer(
feed_intake_kg_d * 1000 ~  bw_kg
+  adg_g_day
+ CP_nutrition
+  NDF_nutrition
+ Ash_nutrition
+ EE_nutrition
+ (
1
+ adg_g_day
+ CP_nutrition
+  NDF_nutrition
+ Ash_nutrition
+ EE_nutrition
| B.Code)
, weights = reg.weight
, data = sheep
# , data = sheep[sheep$bw_kg > mean(na.omit(sheep$bw_kg )), ]
)
sp.mod.1 <- lmer(
feed_intake_kg_d * 1000 ~  bw_kg
+  adg_g_day
+ CP_nutrition
+  NDF_nutrition
+ Ash_nutrition
+ EE_nutrition
+ (
1
+ adg_g_day
# + CP_nutrition
# +  NDF_nutrition
#+ Ash_nutrition
#  + EE_nutrition
| B.Code)
, weights = reg.weight
, data = sheep
# , data = sheep[sheep$bw_kg > mean(na.omit(sheep$bw_kg )), ]
)
r.squaredGLMM(sp.mod.1)[1]
sp.mod.1 <- lmer(
feed_intake_kg_d * 1000 ~  bw_kg
+  adg_g_day
+ CP_nutrition
+  NDF_nutrition
+ Ash_nutrition
+ EE_nutrition
+ (
1
+ adg_g_day
+ CP_nutrition
# +  NDF_nutrition
#+ Ash_nutrition
#  + EE_nutrition
| B.Code)
, weights = reg.weight
, data = sheep
# , data = sheep[sheep$bw_kg > mean(na.omit(sheep$bw_kg )), ]
)
r.squaredGLMM(sp.mod.1)[1]
r.squaredGLMM(sp.mod.1)[2]
sp.mod.1 <- lmer(
feed_intake_kg_d * 1000 ~  bw_kg
+  adg_g_day
+ CP_nutrition
+  NDF_nutrition
+ Ash_nutrition
+ EE_nutrition
+ (
1
+ adg_g_day
+ CP_nutrition
# +  NDF_nutrition
+ Ash_nutrition
#  + EE_nutrition
| B.Code)
, weights = reg.weight
, data = sheep
# , data = sheep[sheep$bw_kg > mean(na.omit(sheep$bw_kg )), ]
)
sp.mod.1 <- lmer(
feed_intake_kg_d * 1000 ~  bw_kg
+  adg_g_day
+ CP_nutrition
+  NDF_nutrition
+ Ash_nutrition
+ EE_nutrition
+ (
1
+ bw_kg
+ adg_g_day
+ CP_nutrition
# +  NDF_nutrition
# + Ash_nutrition
#  + EE_nutrition
| B.Code)
, weights = reg.weight
, data = sheep
# , data = sheep[sheep$bw_kg > mean(na.omit(sheep$bw_kg )), ]
)
r.squaredGLMM(sp.mod.1)[1]
r.squaredGLMM(sp.mod.1)[2]
sp.mod.1 <- lmer(
feed_intake_kg_d * 1000 ~  bw_kg
+  adg_g_day
+ CP_nutrition
+  NDF_nutrition
+ Ash_nutrition
+ EE_nutrition
+ (
1
# + bw_kg
# + adg_g_day
# + CP_nutrition
# +  NDF_nutrition
# + Ash_nutrition
#  + EE_nutrition
| B.Code)
, weights = reg.weight
, data = sheep
# , data = sheep[sheep$bw_kg > mean(na.omit(sheep$bw_kg )), ]
)
r.squaredGLMM(sp.mod.1)[1]
sp.mod.1 <- lmer(
feed_intake_kg_d * 1000 ~  bw_kg
+  adg_g_day
+ CP_nutrition
+  NDF_nutrition
+ Ash_nutrition
+ EE_nutrition
+ (
1
+ bw_kg
# + adg_g_day
# + CP_nutrition
# +  NDF_nutrition
# + Ash_nutrition
#  + EE_nutrition
| B.Code)
, weights = reg.weight
, data = sheep
# , data = sheep[sheep$bw_kg > mean(na.omit(sheep$bw_kg )), ]
)
r.squaredGLMM(sp.mod.1)[1]
gt.mod.1 <- lmer(
feed_intake_kg_d * 1000 ~  bw_kg
+  adg_g_day
+ CP_nutrition
+  NDF_nutrition
+ EE_nutrition
+ Ash_nutrition
+ (1  | B.Code)
#, weights = reg.weight
, data = goats
)
r.squaredGLMM(gt.mod.1)
gt.mod.1 <- lmer(
feed_intake_kg_d * 1000 ~  bw_kg
+  adg_g_day
+ CP_nutrition
+  NDF_nutrition
+ EE_nutrition
+ Ash_nutrition
+ (
1
+ bw_kg
# + adg_g_day
# + CP_nutrition
# +  NDF_nutrition
# + Ash_nutrition
#  + EE_nutrition
| B.Code)
#, weights = reg.weight
, data = goats
)
r.squaredGLMM(gt.mod.1)
save.image('dmi.estimate.RData')
