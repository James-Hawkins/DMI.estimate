setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
getwd()
library('readxl')
library('ggplot2')
library('dplyr')
library('ggpubr')
library('stringi')
library('stringr')
d <<- read_excel('Full_Feed_intake_data.xlsx'
, sheet = 'Full_Feed_Intake_data'
, col_types = "text")
na.value <- 'NA'
unq.spcs <- unique(d$Species)
species.cattle <- c(   unq.spcs[3], unq.spcs[9]  )
species.shoat <- c(unq.spcs[1] ,unq.spcs[2]  )
# Sheep
sheep <- d[  d$Species %in% species.shoat[1]  , ]
sheep <- sheep[sheep$DM_digest != na.value  , ]
# Sheep
sheep <- d[  d$Species %in% species.shoat[1]  , ]
sheep <- sheep[sheep$DM_digest != na.value  , ]
sheep <- sheep[sheep$CP_nutrition != na.value  , ]
sheep <- sheep[sheep$NDF_nutrition != na.value  , ]
sheep <- sheep[sheep$bw_kg != na.value  , ]
sheep <- sheep[sheep$adg_g_day != na.value  , ]
sheep <- sheep[sheep$milk_kg_day != na.value  , ]
sheep <- sheep[sheep$Stage != na.value  , ]
library('lme4')
# Sheep
sheep <- d[  d$Species %in% species.shoat[1]  , ]
length(unique(sheep$B.Code))
length(unique(sheep$A.Level.Name))
d <<- read_excel('Full_Feed_intake_data.xlsx'
, sheet = 'Full_Feed_Intake_data'
, col_types = "text")
names(d)[2] <- 'diet.code'
na.value <- 'NA'
unq.spcs <- unique(d$Species)
species.cattle <- c(   unq.spcs[3], unq.spcs[9]  )
species.shoat <- c(unq.spcs[1] ,unq.spcs[2]  )
c(unq.spcs[2]  )
species.goat <- c(unq.spcs[2]  )
species.sheep <- c(unq.spcs[1]  )
species.sheep
species.sheep
# Sheep
sheep <- d[  d$Species %in% species.sheep  , ]
# Sheep
sheep <- d[  d$Species %in% species.sheep  , ]
length(unique(sheep$B.Code))
length(unique(sheep$diet.code))
sheep$feed_intake_value
sheep <- sheep[sheep$feed_intake_value != na.value, ]
length(unique(sheep$B.Code))
length(unique(sheep$diet.code))
unq.intake.units <- unique(d$feed_intake_value)
unq.intake.units
unq.intake.units <- unique(d$feed_intake_unit)
unq.intake.units
d[d$feed_intake_value == unq.intake.units[1] , 'feed_intake_kg_d'] <- d[d$feed_intake_value == unq.intake.units[1] , 'feed_intake_value']
unq.intake.units
d$feed_intake_kg_d
d$feed_intake_value == unq.intake.units[1]
unq.intake.units[1]
d$feed_intake_value
d$feed_intake_unit == unq.intake.units[1]
d[d$feed_intake_unit == unq.intake.units[1] , 'feed_intake_kg_d'] <- d[d$feed_intake_value == unq.intake.units[1] , 'feed_intake_value']
d <- d[ !is.na(d$feed_intake_kg_d) , ]
unq.intake.units <- unique(d$feed_intake_unit)
d[d$feed_intake_unit == unq.intake.units[1] , 'feed_intake_kg_d'] <- d[d$feed_intake_value == unq.intake.units[1] , 'feed_intake_value']
d <- d[ !is.na(d$feed_intake_kg_d) , ]
d <<- read_excel('Full_Feed_intake_data.xlsx'
, sheet = 'Full_Feed_Intake_data'
, col_types = "text")
names(d)[2] <- 'diet.code'
na.value <- 'NA'
unq.spcs <- unique(d$Species)
species.cattle <- c(   unq.spcs[3], unq.spcs[9]  )
species.shoat <- c(unq.spcs[1] ,unq.spcs[2]  )
species.goat <- c(unq.spcs[2]  )
species.sheep <- c(unq.spcs[1]  )
unq.intake.units <- unique(d$feed_intake_unit)
d[d$feed_intake_unit == unq.intake.units[1] , 'feed_intake_kg_d'] <- d[d$feed_intake_value == unq.intake.units[1] , 'feed_intake_value']
nrow(d)
d <<- read_excel('Full_Feed_intake_data.xlsx'
, sheet = 'Full_Feed_Intake_data'
, col_types = "text")
names(d)[2] <- 'diet.code'
na.value <- 'NA'
unq.spcs <- unique(d$Species)
species.cattle <- c(   unq.spcs[3], unq.spcs[9]  )
species.shoat <- c(unq.spcs[1] ,unq.spcs[2]  )
species.goat <- c(unq.spcs[2]  )
species.sheep <- c(unq.spcs[1]  )
unq.intake.units <- unique(d$feed_intake_unit)
d[d$feed_intake_unit == unq.intake.units[1] , 'feed_intake_kg_d'] <- d[d$feed_intake_value == unq.intake.units[1] , 'feed_intake_value']
d[d$feed_intake_unit == unq.intake.units[1] , 'feed_intake_kg_d'] <- d[d$feed_intake_unit == unq.intake.units[1] , 'feed_intake_value']
nrow(d)
d <- d[ !is.na(d$feed_intake_kg_d) , ]
nrow(d)
# Sheep
sheep <- d[  d$Species %in% species.sheep  , ]
sheep$feed_intake_value
sheep <- sheep[sheep$feed_intake_value > min.feed.intake & sheep$feed_intake_value <= max.feed.intake , ]
# Handle outliers
min.feed.intake <- 0.1
max.feed.intake <- 5
sheep <- sheep[sheep$feed_intake_value > min.feed.intake & sheep$feed_intake_value <= max.feed.intake , ]
length(unique(sheep$B.Code))
length(unique(sheep$diet.code))
sheep$DM_digest
sheep$CP_nutrition
sheep$NDF_nutrition
sheep$bw_kg
sheep$adg_g_day
sheep$NDF_nutrition
sheep$DM_digest
sp.mod.1 <- lmer( feed_intake_value ~  bw_kg +  adg_g_day + DM_digest +  NDF_nutrition + (1 | B.code) data =sheep   )
sp.mod.1 <- lmer( feed_intake_value ~  bw_kg +  adg_g_day + DM_digest +  NDF_nutrition + (1 | B.code) , data =sheep   )
sp.mod.1 <- lmer( feed_intake_value ~  bw_kg +  adg_g_day + DM_digest +  NDF_nutrition + (1 | B.Code) , data =sheep   )
sheep$adg_g_day
d$bw_kg
convert.numeric <- c(
'bw_kg'
)
for (v in convert.numeric){
d[,v] <- as.numeric(d[,v] )
}
v
d[,v]
d <- as.data.frame(d)
for (v in convert.numeric){
d[,v] <- as.numeric(d[,v] )
}
d[,v]
# Sheep
sheep <- d[  d$Species %in% species.sheep  , ]
convert.numeric <- c(
'bw_kg'
, 'adg_g_day'
, 'NDF_nutrition'
,  'ADF_nutrition'
,  'ME_nutrition'
, 'DM_digest'
, 'CP_nutrition'
, 'milk_kg_day'
)
d <- as.data.frame(d)
for (v in convert.numeric){
d[,v] <- as.numeric(d[,v] )
}
# Sheep
sheep <- d[  d$Species %in% species.sheep  , ]
# Handle outliers
min.feed.intake <- 0.1
max.feed.intake <- 5
sheep <- sheep[sheep$feed_intake_value > min.feed.intake & sheep$feed_intake_value <= max.feed.intake , ]
sp.mod.1 <- lmer( feed_intake_value ~  bw_kg +  adg_g_day + DM_digest +  NDF_nutrition + (1 | B.Code) , data =sheep   )
convert.numeric <- c(
, 'feed_intake_value'
, 'bw_kg'
, 'adg_g_day'
, 'NDF_nutrition'
,  'ADF_nutrition'
,  'ME_nutrition'
, 'DM_digest'
, 'CP_nutrition'
, 'milk_kg_day'
)
convert.numeric <- c(
'feed_intake_value'
, 'bw_kg'
, 'adg_g_day'
, 'NDF_nutrition'
,  'ADF_nutrition'
,  'ME_nutrition'
, 'DM_digest'
, 'CP_nutrition'
, 'milk_kg_day'
)
d <- as.data.frame(d)
for (v in convert.numeric){
d[,v] <- as.numeric(d[,v] )
}
unq.intake.units <- unique(d$feed_intake_unit)
d[d$feed_intake_unit == unq.intake.units[1] , 'feed_intake_kg_d'] <- d[d$feed_intake_unit == unq.intake.units[1] , 'feed_intake_value']
nrow(d)
d <- d[ !is.na(d$feed_intake_kg_d) , ]
nrow(d)
# Sheep
sheep <- d[  d$Species %in% species.sheep  , ]
sheep <- sheep[sheep$feed_intake_value != na.value, ]
# Handle outliers
min.feed.intake <- 0.1
max.feed.intake <- 5
sheep <- sheep[sheep$feed_intake_value > min.feed.intake & sheep$feed_intake_value <= max.feed.intake , ]
sp.mod.1 <- lmer( feed_intake_value ~  bw_kg +  adg_g_day + DM_digest +  NDF_nutrition + (1 | B.Code) , data =sheep   )
summary(sp.mod.1)
coef(sp.mod.1)
coef(sp.mod.1)
confint(sp.mod.1)
summary(sp.mod.1)
coef(sp.mod.1)
summary(sp.mod.1)
rmse(sp.mod.1)
library('lmerTest')
rmse(sp.mod.1)
r.squaredGLMM(sp.mod.1)
#library(imager)
library(nlme)
r.squaredGLMM(sp.mod.1)
library(afex)
r.squaredGLMM(sp.mod.1)
library('MuMIn')
r.squaredGLMM(sp.mod.1)
length(unique(sheep$B.Code))
length(unique(sheep$diet.code))
# Apply weights
mean.samp.sz <- mean(sheep$T.Animals)
sheep$T.Animals
convert.numeric <- c(
'feed_intake_value'
, 'bw_kg'
, 'adg_g_day'
, 'NDF_nutrition'
,  'ADF_nutrition'
,  'ME_nutrition'
, 'DM_digest'
, 'CP_nutrition'
, 'milk_kg_day'
, 'T.Animals'
)
# Data prep
{
names(d)[2] <- 'diet.code'
d$milk_kg_day
convert.numeric <- c(
'feed_intake_value'
, 'bw_kg'
, 'adg_g_day'
, 'NDF_nutrition'
,  'ADF_nutrition'
,  'ME_nutrition'
, 'DM_digest'
, 'CP_nutrition'
, 'milk_kg_day'
, 'T.Animals'
)
d <- as.data.frame(d)
for (v in convert.numeric){
d[,v] <- as.numeric(d[,v] )
}
na.value <- 'NA'
unq.spcs <- unique(d$Species)
species.cattle <- c(   unq.spcs[3], unq.spcs[9]  )
species.shoat <- c(unq.spcs[1] ,unq.spcs[2]  )
species.goat <- c(unq.spcs[2]  )
species.sheep <- c(unq.spcs[1]  )
unq.intake.units <- unique(d$feed_intake_unit)
d[d$feed_intake_unit == unq.intake.units[1] , 'feed_intake_kg_d'] <- d[d$feed_intake_unit == unq.intake.units[1] , 'feed_intake_value']
nrow(d)
d <- d[ !is.na(d$feed_intake_kg_d) , ]
nrow(d)
}
# --- SHEEP
sheep <- d[  d$Species %in% species.sheep  , ]
length(unique(sheep$B.Code))
length(unique(sheep$diet.code))
# Handle outliers
min.feed.intake <- 0.1
max.feed.intake <- 5
sheep <- sheep[sheep$feed_intake_value > min.feed.intake & sheep$feed_intake_value <= max.feed.intake , ]
sheep$T.Animals
# Apply weights
mean.samp.sz <- mean(sheep$T.Animals)
mean.samp.sz
# Apply weights
mean.samp.sz <- mean(na.omit(sheep$T.Animals))
mean.samp.sz
sheep[, 'T.Animals'] / mean.samp.sz
0.5^2
sheep[, 'reg.weight'] <-  sheep[, 'T.Animals'] / mean.samp.sz
sp.mod.1 <- lmer( feed_intake_value ~  bw_kg +  adg_g_day + DM_digest +  NDF_nutrition + (1 | B.Code) , weights = reg.weight, data =sheep   )
sp.mod.1 <- lmer( feed_intake_value ~  bw_kg +  adg_g_day + DM_digest +  NDF_nutrition + (1 | B.Code) , weights = reg.weight, data =sheep   )
rmse(sp.mod.1)
r.squaredGLMM(sp.mod.1)
summary(sp.mod.1)
print(paste('Quantity of studies before outlier removal: ', length(unique(d$B.Code))))
d <- d[ !is.na(d$feed_intake_kg_d) , ]
d <- d[ !is.na(d$T.Animals) , ]
print(paste('Quantity of studies after outlier removal: ', length(unique(d$B.Code))))
d <<- read_excel('Full_Feed_intake_data.xlsx'
, sheet = 'Full_Feed_Intake_data'
, col_types = "text")
d <<- read_excel('Full_Feed_intake_data.xlsx'
, sheet = 'Full_Feed_Intake_data'
, col_types = "text")
# Data prep
{
names(d)[2] <- 'diet.code'
convert.numeric <- c(
'feed_intake_value'
, 'bw_kg'
, 'adg_g_day'
, 'NDF_nutrition'
,  'ADF_nutrition'
,  'ME_nutrition'
, 'DM_digest'
, 'CP_nutrition'
, 'milk_kg_day'
, 'T.Animals'
)
d <- as.data.frame(d)
for (v in convert.numeric){
d[,v] <- as.numeric(d[,v] )
}
na.value <- 'NA'
unq.spcs <- unique(d$Species)
species.cattle <- c(   unq.spcs[3], unq.spcs[9]  )
species.shoat <- c(unq.spcs[1] ,unq.spcs[2]  )
species.goat <- c(unq.spcs[2]  )
species.sheep <- c(unq.spcs[1]  )
unq.intake.units <- unique(d$feed_intake_unit)
d[d$feed_intake_unit == unq.intake.units[1] , 'feed_intake_kg_d'] <- d[d$feed_intake_unit == unq.intake.units[1] , 'feed_intake_value']
print(paste('Quantity of studies before outlier removal: ', length(unique(d$B.Code))))
d <- d[ !is.na(d$feed_intake_kg_d) , ]
d <- d[ !is.na(d$T.Animals) , ]
print(paste('Quantity of studies after outlier removal: ', length(unique(d$B.Code))))
}
