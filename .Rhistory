)
sp.mod.1.lo.NDF <- lmer(
formula
, weights = .1 * sheep.cc.lo.NDF$T.Animals / (mean(na.omit(sheep.cc.lo.NDF$T.Animals)) )
, data = sheep.cc.lo.NDF
)
summary(sheep.cc.lo.NDF)
formula <- as.formula(
paste(
"feeding.level.g.d.kg.bw ~"
,v.list.weight[1]
, " + (1 | B.Code)"
)
)
sp.mod.1.lo.NDF <- lmer(
formula
, weights = .1 * sheep.cc.lo.NDF$T.Animals / (mean(na.omit(sheep.cc.lo.NDF$T.Animals)) )
, data = sheep.cc.lo.NDF
)
summary(sheep.cc.lo.NDF)
r.squaredGLMM(sp.mod.1.lo.NDF)
plus.sign <- ' + '
formula <- as.formula(
paste(
"feeding.level.g.d.kg.bw ~"
,v.list.weight[1]
, plus.sign
, v.list.weight[2]
, " + (1 | B.Code)"
)
)
sp.mod.1.lo.NDF <- lmer(
formula
, weights = .1 * sheep.cc.lo.NDF$T.Animals / (mean(na.omit(sheep.cc.lo.NDF$T.Animals)) )
, data = sheep.cc.lo.NDF
)
sheep.cc.lo.NDF$bw_kg.sqd <- sheep.cc.lo.NDF$bw_kg^2
plus.sign <- ' + '
formula <- as.formula(
paste(
"feeding.level.g.d.kg.bw ~"
,v.list.weight[1]
, plus.sign
, v.list.weight[2]
, " + (1 | B.Code)"
)
)
sp.mod.1.lo.NDF <- lmer(
formula
, weights = .1 * sheep.cc.lo.NDF$T.Animals / (mean(na.omit(sheep.cc.lo.NDF$T.Animals)) )
, data = sheep.cc.lo.NDF
)
summary(sheep.cc.lo.NDF)
r.squaredGLMM(sp.mod.1.lo.NDF)
sp.mod.1.lo.NDF <- lmer(
formula
, weights = .1 * sheep.cc.lo.NDF$T.Animals / (mean(na.omit(sheep.cc.lo.NDF$T.Animals)) )
, data = sheep.cc.lo.NDF
)
summary(sheep.cc.lo.NDF)
r.squaredGLMM(sp.mod.1.lo.NDF)
formula <- as.formula(
paste(
"feeding.level.g.d.kg.bw ~"
, v.list.weight[1]
, plus.sign
, v.list.weight[2]
, rd.intercept
, rd.unit
)
)
rd.intercept <- '+ (1 '
rd.unit <- '| B.Code)'
formula <- as.formula(
paste(
"feeding.level.g.d.kg.bw ~"
, v.list.weight[1]
, plus.sign
, v.list.weight[2]
, rd.intercept
, rd.unit
)
)
sp.mod.1.lo.NDF <- lmer(
formula
, weights = .1 * sheep.cc.lo.NDF$T.Animals / (mean(na.omit(sheep.cc.lo.NDF$T.Animals)) )
, data = sheep.cc.lo.NDF
)
summary(sheep.cc.lo.NDF)
r.squaredGLMM(sp.mod.1.lo.NDF)
v.list.weight <- c(NA,'bw_kg' , 'bw_kg.sqd')
plus.sign <- ' + '
rd.intercept <- '+ (1 '
rd.unit <- '| B.Code)'
v.list.weight[1]
formula <- as.formula(
paste(
"feeding.level.g.d.kg.bw ~"
, v.list.weight[1]
, plus.sign
, v.list.weight[2]
, rd.intercept
, rd.unit
)
)
sp.mod.1.lo.NDF <- lmer(
formula
, weights = .1 * sheep.cc.lo.NDF$T.Animals / (mean(na.omit(sheep.cc.lo.NDF$T.Animals)) )
, data = sheep.cc.lo.NDF
)
v.list.weight[1]
sheep.cc.lo.NDF$dummy <- 1
sheep.cc.lo.NDF$dummy <- 1
v.list.weight <- c('dummy' , 'bw_kg' , 'bw_kg.sqd')
v.list.weight[1]
formula <- as.formula(
paste(
"feeding.level.g.d.kg.bw ~"
, v.list.weight[1]
, plus.sign
, v.list.weight[2]
, rd.intercept
, rd.unit
)
)
sp.mod.1.lo.NDF <- lmer(
formula
, weights = .1 * sheep.cc.lo.NDF$T.Animals / (mean(na.omit(sheep.cc.lo.NDF$T.Animals)) )
, data = sheep.cc.lo.NDF
)
summary(sheep.cc.lo.NDF)
r.squaredGLMM(sp.mod.1.lo.NDF)
coefs(sp.mod.1.lo.NDF)
coeffs(sp.mod.1.lo.NDF)
confint(sp.mod.1.lo.NDF)
ranef(sp.mod.1.lo.NDF)
fixef(sp.mod.1.lo.NDF)
v.list.weight[2]
v.list.weight[1]
pred.vars <- c(
'bw_kg'
,  'adg_g_day'
)
for (v in pred.vars){
v.sqd <- str_c(v,'.sqd')
sheep.cc.lo.NDF[,v.sqd] <-  sheep.cc.lo.NDF[,v]
}
sheep.cc.lo.NDF$
pred.vars <- c(
'bw_kg'
,  'adg_g_day'
,'NDF_nutrition'
,'CP_nutrition'
, 'Ash_nutrition'
, 'EE_nutrition'
)
sheep.cc.lo.NDF$
pred.vars <- c(
'bw_kg'
,  'adg_g_day'
,'NDF_nutrition'
,'CP_nutrition'
, 'Ash_nutrition'
, 'EE_nutrition'
)
sheep.cc.lo.NDF$adg_g_day
pred.vars <- c(
'bw_kg'
,  'adg_g_day'
,'NDF_nutrition'
,'CP_nutrition'
, 'Ash_nutrition'
, 'EE_nutrition'
)
for (v in pred.vars){
v.sqt <- str_c( v , '.sqt')
v.sqd <- str_c(v,'.sqd')
v.cbd <- str_c( v , '.cbd')
v.log <- str_c( v , '.log')
sheep.cc.lo.NDF[, v.sqt] <-  sheep.cc.lo.NDF[,v]^0.5
sheep.cc.lo.NDF[,v.sqd] <-  sheep.cc.lo.NDF[,v]^2
sheep.cc.lo.NDF[,v.cbd] <-  sheep.cc.lo.NDF[,v]^3
sheep.cc.lo.NDF[,v.log] <-  log(sheep.cc.lo.NDF[,v])
}
suffixes <- c('.sqt' , 'sqd', 'cbd' , '.log')
suffixes <- c('.sqt' , 'sqd', 'cbd' , '.log')
suffixes <- c('.sqt' , 'sqd', 'cbd' , '.log')
for (v in pred.vars){
v.sqt <- str_c( suffixes[1]  , '.sqt')
v.sqd <- str_c( suffixes[2]  , '.sqd')
v.cbd <- str_c( suffixes[3]  , '.cbd')
v.log <- str_c( suffixes[4]  , '.log')
sheep.cc.lo.NDF[, v.sqt] <-  sheep.cc.lo.NDF[,v]^0.5
sheep.cc.lo.NDF[,v.sqd] <-  sheep.cc.lo.NDF[,v]^2
sheep.cc.lo.NDF[,v.cbd] <-  sheep.cc.lo.NDF[,v]^3
sheep.cc.lo.NDF[,v.log] <-  log(sheep.cc.lo.NDF[,v])
}
v.list.BW <- c('dummy' , 'bw_kg' )   #, 'bw_kg.sqd' ,  'bw_kg.sqt' ,  'bw_kg.cbd' , 'bw_kg.log')
v.list.DG <- c('dummy' , 'adg_g_day' )   #'adg_g_day.sqd')
v.list.BW <- c('dummy' , 'bw_kg' )   #, 'bw_kg.sqd' ,  'bw_kg.sqt' ,  'bw_kg.cbd' , 'bw_kg.log')
v.list.BW <- c('dummy' , 'bw_kg' )   #, 'bw_kg.sqd' ,  'bw_kg.sqt' ,  'bw_kg.cbd' , 'bw_kg.log')
for (s in suffixes){
new.var.BW <- str_c( v.list.BW[2] ,s )
v.list.BW <- append(v.list.BW , new.var.BW )
}
v.list.BW
v.list.BW <- c('dummy' , 'bw_kg' )
v.list.DG <- c('dummy' , 'adg_g_day' )
v.list.NDF <- c('dummy' , 'NDF_nutrition' )
v.list.EE <- c('dummy' , 'EE_nutrition' )
v.list.ASH <- c('dummy' , 'Ash_nutrition' )
for (s in suffixes){
new.var.BW <- str_c( v.list.BW[2] ,s )
v.list.BW <- append(v.list.BW , new.var.BW )
new.var.DG <- str_c( v.list.DG[2] ,s )
v.list.DG <- append(v.list.DG , new.var.DG )
}
v.list.DG
suffixes <- c('.sqt' , '.sqd', '.cbd' , '.log')
for (v in pred.vars){
v.sqt <- str_c( suffixes[1]  , '.sqt')
v.sqd <- str_c( suffixes[2]  , '.sqd')
v.cbd <- str_c( suffixes[3]  , '.cbd')
v.log <- str_c( suffixes[4]  , '.log')
sheep.cc.lo.NDF[, v.sqt] <-  sheep.cc.lo.NDF[,v]^0.5
sheep.cc.lo.NDF[,v.sqd] <-  sheep.cc.lo.NDF[,v]^2
sheep.cc.lo.NDF[,v.cbd] <-  sheep.cc.lo.NDF[,v]^3
sheep.cc.lo.NDF[,v.log] <-  log(sheep.cc.lo.NDF[,v])
}
v.list.BW <- c('dummy' , 'bw_kg' )
v.list.DG <- c('dummy' , 'adg_g_day' )
v.list.NDF <- c('dummy' , 'NDF_nutrition' )
v.list.EE <- c('dummy' , 'EE_nutrition' )
v.list.ASH <- c('dummy' , 'Ash_nutrition' )
for (s in suffixes){
new.var.BW <- str_c( v.list.BW[2] ,s )
v.list.BW <- append(v.list.BW , new.var.BW )
new.var.DG <- str_c( v.list.DG[2] ,s )
v.list.DG <- append(v.list.DG , new.var.DG )
}
v.list.NDF <- c('dummy' , 'NDF_nutrition' )
v.list.EE <- c('dummy' , 'EE_nutrition' )
v.list.ASH <- c('dummy' , 'Ash_nutrition' )
for (s in suffixes){
new.var.BW <- str_c( v.list.BW[2] ,s )
v.list.BW <- append(v.list.BW , new.var.BW )
new.var.DG <- str_c( v.list.DG[2] ,s )
v.list.DG <- append(v.list.DG , new.var.DG )
new.var.NDF <- str_c( v.list.NDF[2] ,s )
v.list.NDF <- append(v.list.NDF , new.var.NDF )
new.var.EE <- str_c( v.list.EE[2] ,s )
v.list.EE <- append(v.list.EE , new.var.EE )
new.var.ASH <- str_c( v.list.ASH[2] ,s )
v.list.ASH <- append(v.list.ASH , new.var.ASH )
}
v.list.ASH
# Nested for loops
for ( v1 in v.list.BW ) {
for ( v2 in v.list.DG) {
formula <- as.formula(
paste(
"feeding.level.g.d.kg.bw ~"
# fixed
, v1
, plus.sign
, v2
# random
, rd.intercept
, rd.unit
)
)
sp.mod.1.lo.NDF <- lmer(
formula
, weights = .1 * sheep.cc.lo.NDF$T.Animals / (mean(na.omit(sheep.cc.lo.NDF$T.Animals)) )
, data = sheep.cc.lo.NDF
)
}
}
stepw.out <- data.frame()
stepw.out$formula <- NA
# Data frame to store output variables
stepw.out <- data.frame()
stepw.out$formula <- NA
# Data frame to store output variables
stepw.out <- data.frame(
formula = NA
)
stepw.out$formula
# Data frame to store output variables
stepw.out <- data.frame(
formula = NA
, rows = 20
)
stepw.out$formula
# Data frame to store output variables
stepw.out <- data.frame(
formula = character()
)
stepw.out$formula
stepw.out[ 1 , 'formula'] <- NA
stepw.out[ 1 , 'formula']
stepw.out[ 1 , 'formula'] <- 22
stepw.out[ 1 , 'formula']
stepw.out
stepw.out[ 2 , 'formula'] <- 22
stepw.out[ 2 , 'formula']
stepw.out
# Data frame to store output variables
stepw.out <- data.frame(
formula = character()
)
# Nested for loops
for ( v1 in v.list.BW ) {
for ( v2 in v.list.DG) {
formula <- as.formula(
paste(
"feeding.level.g.d.kg.bw ~"
# fixed
, v1
, plus.sign
, v2
# random
, rd.intercept
, rd.unit
)
)
sp.mod.1.lo.NDF <- lmer(
formula
, weights = .1 * sheep.cc.lo.NDF$T.Animals / (mean(na.omit(sheep.cc.lo.NDF$T.Animals)) )
, data = sheep.cc.lo.NDF
)
}
}
# Nested for loops
row <- 0
# Nested for loops
row <- 0
# Data frame to store output variables
stepw.out <- data.frame(
formula = character()
)
for ( v1 in v.list.BW ) {
for ( v2 in v.list.DG) {
formula <- as.formula(
paste(
"feeding.level.g.d.kg.bw ~"
# fixed
, v1
, plus.sign
, v2
# random
, rd.intercept
, rd.unit
)
)
sp.mod.1.lo.NDF <- lmer(
formula
, weights = .1 * sheep.cc.lo.NDF$T.Animals / (mean(na.omit(sheep.cc.lo.NDF$T.Animals)) )
, data = sheep.cc.lo.NDF
)
stepw.out[ r , 'formula'] <- formula
row <- row + 1
}
}
# Nested for loops
r <- 0
for ( v1 in v.list.BW ) {
for ( v2 in v.list.DG) {
formula <- as.formula(
paste(
"feeding.level.g.d.kg.bw ~"
# fixed
, v1
, plus.sign
, v2
# random
, rd.intercept
, rd.unit
)
)
sp.mod.1.lo.NDF <- lmer(
formula
, weights = .1 * sheep.cc.lo.NDF$T.Animals / (mean(na.omit(sheep.cc.lo.NDF$T.Animals)) )
, data = sheep.cc.lo.NDF
)
stepw.out[ r , 'formula'] <- formula
r <- r + 1
}
}
formula
r
stepw.out[ r , 'formula']
stepw.out[ r , 'formula'] <- formula
stepw.out[ r , 'formula'] <- as.character(formula)
as.character(formula)
as.string(formula)
string(formula)
# Data frame to store output variables
stepw.out <- data.frame(
variable.1 = character()
, variable.2 = character()
)
# Nested for loops
r <- 0
for ( v1 in v.list.BW ) {
for ( v2 in v.list.DG) {
formula <- as.formula(
paste(
"feeding.level.g.d.kg.bw ~"
# fixed
, v1
, plus.sign
, v2
# random
, rd.intercept
, rd.unit
)
)
sp.mod.1.lo.NDF <- lmer(
formula
, weights = .1 * sheep.cc.lo.NDF$T.Animals / (mean(na.omit(sheep.cc.lo.NDF$T.Animals)) )
, data = sheep.cc.lo.NDF
)
stepw.out[ r , 'variable.1'] <- v1
stepw.out[ r , 'variable.2'] <- v2
r <- r + 1
}
}
stepw.out
model <- lmer(
formula
, weights = .1 * sheep.cc.lo.NDF$T.Animals / (mean(na.omit(sheep.cc.lo.NDF$T.Animals)) )
, data = sheep.cc.lo.NDF
)
# Data frame to store output variables
stepw.out <- data.frame(
, model = factor()
variable.1 = character()
# Data frame to store output variables
stepw.out <- data.frame(
, model = factor()
, variable.1 = character()
, variable.2 = character()
)
# Data frame to store output variables
stepw.out <- data.frame(
model = factor()
, variable.1 = character()
, variable.2 = character()
)
# Nested for loops
r <- 0
for ( v1 in v.list.BW ) {
for ( v2 in v.list.DG) {
formula <- as.formula(
paste(
"feeding.level.g.d.kg.bw ~"
# fixed
, v1
, plus.sign
, v2
# random
, rd.intercept
, rd.unit
)
)
model <- lmer(
formula
, weights = .1 * sheep.cc.lo.NDF$T.Animals / (mean(na.omit(sheep.cc.lo.NDF$T.Animals)) )
, data = sheep.cc.lo.NDF
)
r2.mrg <- r.squaredGLMM(model)[1]
r2.cnd <- r.squaredGLMM(model)[2]
stepw.out[ r , 'model'] <- model
stepw.out[ r , 'variable.1'] <- v1
stepw.out[ r , 'variable.2'] <- v2
r <- r + 1
}
}
# Nested for loops
r <- 0
for ( v1 in v.list.BW ) {
for ( v2 in v.list.DG) {
formula <- as.formula(
paste(
"feeding.level.g.d.kg.bw ~"
# fixed
, v1
, plus.sign
, v2
# random
, rd.intercept
, rd.unit
)
)
model <- lmer(
formula
, weights = .1 * sheep.cc.lo.NDF$T.Animals / (mean(na.omit(sheep.cc.lo.NDF$T.Animals)) )
, data = sheep.cc.lo.NDF
)
r2.mrg <- r.squaredGLMM(model)[1]
r2.cnd <- r.squaredGLMM(model)[2]
#stepw.out[ r , 'model'] <- model
stepw.out[ r , 'variable.1'] <- v1
stepw.out[ r , 'variable.2'] <- v2
r <- r + 1
}
}
model
AIC(model)
AIC(model)
BIC(model)
