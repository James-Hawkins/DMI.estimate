# + Ash_nutrition
#  + EE_nutrition
| B.Code)
# , weights = .1 * sheep.cc.lo.NDF$T.Animals / (max(na.omit(sheep.cc.lo.NDF$T.Animals)) - min(na.omit(sheep.cc.lo.NDF$T.Animals)))
, weights = .1 * sheep.cc.hi.NDF$T.Animals / (mean(na.omit(sheep.cc.hi.NDF$T.Animals)) )
, data = sheep.cc.hi.NDF
)
sheep.cc.lo.NDF$fitted <- predict(sp.mod.1.lo.NDF)
rbind( sheep.cc.lo.NDF , sheep.cc.hi.NDF)
gg.sheep.dat.all <- rbind( sheep.cc.lo.NDF , sheep.cc.hi.NDF)
gg.sheep.compare <- ggplot( gg.sheep.dat.all   ) +
geom_point( aes( x =   feeding.level.g.d.kg.bw, y = fitted        ) , )
gg.sheep.compare
sheep.cc.hi.NDF
sheep.cc.lo.NDF$model <- 'low.ndf'
sheep.cc.hi.NDF$model <- 'hi.ndf'
gg.sheep.dat.all <- rbind( sheep.cc.lo.NDF , sheep.cc.hi.NDF)
ggplot( gg.sheep.dat.all   ) +
geom_point( aes( x =   feeding.level.g.d.kg.bw, y = fitted        ) , ) +
facet_grid( ~ model )
ggplot( gg.sheep.dat.all   ) +
geom_point( aes( x =   feeding.level.g.d.kg.bw, y = fitted        ) , ) +
facet_grid( ~ model , scales = 'fixed_y')
ggplot( gg.sheep.dat.all   ) +
geom_point( aes( x =   feeding.level.g.d.kg.bw, y = fitted        ) , ) +
facet_grid( ~ model , scales = 'fixed')
ggplot( gg.sheep.dat.all   ) +
geom_point( aes( x =   feeding.level.g.d.kg.bw, y = fitted        ) , ) +
facet_grid( ~ model , scales = 'free')
ggplot( gg.sheep.dat.all   ) +
geom_point( aes( x =   feeding.level.g.d.kg.bw, y = fitted        ) , ) +
geom_line(aes(x = y)) +
facet_grid( ~ model , scales = 'free')
ggplot( gg.sheep.dat.all   ) +
geom_point( aes( x =   feeding.level.g.d.kg.bw, y = fitted        ) , ) +
geom_line(aes(x = feeding.level.g.d.kg.bw , y = feeding.level.g.d.kg.bw)) +
facet_grid( ~ model , scales = 'free')
sp.mod.1.lo.NDF <- lmer(
feeding.level.g.d.kg.bw ~  bw_kg
+  log(adg_g_day)
+ log(CP_nutrition )
+   #+ CP_nutrition *   CP_nutrition
#+  NDF_nutrition
+    log(NDF_nutrition )
+ Ash_nutrition
+ EE_nutrition
+ (
1
# + bw_kg
# + adg_g_day
# + CP_nutrition
# +  NDF_nutrition
# + Ash_nutrition
#  + EE_nutrition
| B.Code)
# , weights = .1 * sheep.cc.lo.NDF$T.Animals / (max(na.omit(sheep.cc.lo.NDF$T.Animals)) - min(na.omit(sheep.cc.lo.NDF$T.Animals)))
, weights = .1 * sheep.cc.lo.NDF$T.Animals / (mean(na.omit(sheep.cc.lo.NDF$T.Animals)) )
, data = sheep.cc.lo.NDF
)
sheep.cc.lo.NDF$model <- 'low.ndf'
sheep.cc.hi.NDF$model <- 'hi.ndf'
gg.sheep.dat.all <- rbind( sheep.cc.lo.NDF , sheep.cc.hi.NDF)
ggplot( gg.sheep.dat.all   ) +
geom_point( aes( x =   feeding.level.g.d.kg.bw, y = fitted        ) , ) +
geom_line(aes(x = feeding.level.g.d.kg.bw , y = feeding.level.g.d.kg.bw)) +
facet_grid( ~ model , scales = 'free')
r.squaredGLMM(sp.mod.1.lo.NDF)
rmse(sp.mod.1.lo.NDF) / mean((predict(sp.mod.1.lo.NDF)))
sp.mod.1.lo.NDF <- lmer(
feeding.level.g.d.kg.bw ~  bw_kg
+  log(adg_g_day)
+ log(CP_nutrition )
+   #+ CP_nutrition *   CP_nutrition
#+  NDF_nutrition
+    log(NDF_nutrition )
+ Ash_nutrition
+ EE_nutrition
+ (
1
# + bw_kg
# + adg_g_day
# + CP_nutrition
# +  NDF_nutrition
# + Ash_nutrition
#  + EE_nutrition
| B.Code)
# , weights = .1 * sheep.cc.lo.NDF$T.Animals / (max(na.omit(sheep.cc.lo.NDF$T.Animals)) - min(na.omit(sheep.cc.lo.NDF$T.Animals)))
, weights = .1 * sheep.cc.lo.NDF$T.Animals / (mean(na.omit(sheep.cc.lo.NDF$T.Animals)) )
, data = sheep.cc.lo.NDF
)
r.squaredGLMM(sp.mod.1.lo.NDF)
rmse(sp.mod.1.lo.NDF) / mean((predict(sp.mod.1.lo.NDF)))
sheep.cc.lo.NDF$fitted <- predict(sp.mod.1.lo.NDF)
sheep.cc.lo.NDF$model <- 'low.ndf'
sheep.cc.hi.NDF$model <- 'hi.ndf'
gg.sheep.dat.all <- rbind( sheep.cc.lo.NDF , sheep.cc.hi.NDF)
gg.sheep.compare <- ggplot( gg.sheep.dat.all   ) +
geom_point( aes( x =   feeding.level.g.d.kg.bw, y = fitted        ) , ) +
geom_line(aes(x = feeding.level.g.d.kg.bw , y = feeding.level.g.d.kg.bw)) +
facet_grid( ~ model , scales = 'free')
sheep.cc.f1$resds <- residuals(sp.mod.1)
sheep.cc.lo.NDF$model <- 'low.ndf'
sheep.cc.hi.NDF$model <- 'hi.ndf'
gg.sheep.dat.all <- rbind( sheep.cc.lo.NDF , sheep.cc.hi.NDF)
gg.sheep.compare <- ggplot( gg.sheep.dat.all   ) +
geom_point( aes( x =   feeding.level.g.d.kg.bw, y = fitted        ) , ) +
geom_line(aes(x = feeding.level.g.d.kg.bw , y = feeding.level.g.d.kg.bw)) +
facet_grid( ~ model , scales = 'free')
gg.sheep.compare
gg.sheep.compare <- ggplot( gg.sheep.dat.all   ) +
geom_point( aes( x =   feeding.level.g.d.kg.bw, y = fitted        ) , ) +
geom_line(aes(x = feeding.level.g.d.kg.bw , y = feeding.level.g.d.kg.bw)) +
facet_grid( ~ model , scales = 'fixed')
gg.sheep.compare
# Plots
goats.cc.f1.hi.NDF$fitted <- predict(goats.cc.f1.hi.NDF)
goats.cc.f1.lo.NDF$fitted <- predict(goats.cc.f1.lo.NDF)
# Plots
goats.cc.f1.hi.NDF$fitted <- predict(gt.mod.1.hi.ndf)
goats.cc.f1.lo.NDF$fitted <- predict(gt.mod.1.lo.ndf)
# Plots
gt.mod.1.hi.ndf$model <- 'hi.ndf'
# Plots
goats.cc.f1.hi.NDF$model <- 'hi.ndf'
goats.cc.f1.lo.NDF$model <- 'lo.ndf'
goats.cc.f1.hi.NDF$fitted <- predict(gt.mod.1.hi.ndf)
goats.cc.f1.lo.NDF$fitted <- predict(gt.mod.1.lo.ndf)
gg.dat.all <- rbind(goats.cc.f1.lo.NDF , goats.cc.f1.hi.NDF , sheep.cc.lo.NDF , sheep.cc.hi.NDF )
vars.1 <- c(
'feed_intake_g_d'
,  'bw_kg'
, 'adg_g_day'
,   'CP_nutrition'
,  'NDF_nutrition'
#, 'ADF_nutrition'
,'Ash_nutrition'
, 'EE_nutrition'
#, 'DM_digest'
)
goats.cc.f1 <- goats[complete.cases(goats[,vars.1]),]
ndf.thresh.lo <- 300
ndf.thresh.hi <- 600
goats.cc.f1.lo.NDF <- goats.cc.f1[goats.cc.f1$NDF_nutrition <= ndf.thresh ,]
goats.cc.f1.hi.NDF <- goats.cc.f1[goats.cc.f1$NDF_nutrition >= ndf.thresh.hi ,]
gt.mod.1.lo.ndf <- lmer(
feeding.rate ~
log(bw_kg)
+  adg_g_day #* adg_g_day
+ log(CP_nutrition)
+  log(NDF_nutrition)
+ log(Ash_nutrition)
+ log(EE_nutrition)
+ (
1
# + bw_kg
#  + adg_g_day
# + CP_nutrition
#  +  NDF_nutrition
# + Ash_nutrition
#    + EE_nutrition
| B.Code)
, weights = 0.05 *goats.cc.f1.lo.NDF$T.Animals / mean(na.omit(goats.cc.f1.lo.NDF$T.Animals))
, data = goats.cc.f1.lo.NDF
)
gt.mod.1.lo.ndf <- lmer(
feeding.level.g.d.kg.bw ~
log(bw_kg)
+  adg_g_day #* adg_g_day
+ log(CP_nutrition)
+  log(NDF_nutrition)
+ log(Ash_nutrition)
+ log(EE_nutrition)
+ (
1
# + bw_kg
#  + adg_g_day
# + CP_nutrition
#  +  NDF_nutrition
# + Ash_nutrition
#    + EE_nutrition
| B.Code)
, weights = 0.05 *goats.cc.f1.lo.NDF$T.Animals / mean(na.omit(goats.cc.f1.lo.NDF$T.Animals))
, data = goats.cc.f1.lo.NDF
)
# Goats
goats <- d[  d$Species %in% species.goat  , ]
vars.1 <- c(
'feed_intake_g_d'
,  'bw_kg'
, 'adg_g_day'
,   'CP_nutrition'
,  'NDF_nutrition'
#, 'ADF_nutrition'
,'Ash_nutrition'
, 'EE_nutrition'
#, 'DM_digest'
)
goats.cc.f1 <- goats[complete.cases(goats[,vars.1]),]
ndf.thresh.lo <- 300
ndf.thresh.hi <- 600
goats.cc.f1.lo.NDF <- goats.cc.f1[goats.cc.f1$NDF_nutrition <= ndf.thresh ,]
goats.cc.f1.hi.NDF <- goats.cc.f1[goats.cc.f1$NDF_nutrition >= ndf.thresh.hi ,]
gt.mod.1.lo.ndf <- lmer(
feeding.level.g.d.kg.bw ~
log(bw_kg)
+  adg_g_day #* adg_g_day
+ log(CP_nutrition)
+  log(NDF_nutrition)
+ log(Ash_nutrition)
+ log(EE_nutrition)
+ (
1
# + bw_kg
#  + adg_g_day
# + CP_nutrition
#  +  NDF_nutrition
# + Ash_nutrition
#    + EE_nutrition
| B.Code)
, weights = 0.05 *goats.cc.f1.lo.NDF$T.Animals / mean(na.omit(goats.cc.f1.lo.NDF$T.Animals))
, data = goats.cc.f1.lo.NDF
)
gt.mod.1.hi.ndf <- lmer(
#feeding.level.g.d.kg.bw ~
feeding.rate ~
bw_kg
+  adg_g_day * adg_g_day
+ CP_nutrition
+  NDF_nutrition
+ log(Ash_nutrition)
+ log(EE_nutrition)
# + log(ADF_nutrition)
+ (
1
# + bw_kg
#  + adg_g_day
# + CP_nutrition
#  +  NDF_nutrition
# + Ash_nutrition
#   + EE_nutrition
| B.Code)
, weights = 1 * goats.cc.f1.hi.NDF$T.Animals / (max(na.omit(goats.cc.f1.hi.NDF$T.Animals)) - min(na.omit(goats.cc.f1.hi.NDF$T.Animals)))
, data = goats.cc.f1.hi.NDF
)
gt.mod.1.lo.ndf <- lmer(
feeding.level.g.d.kg.bw ~
log(bw_kg)
+  adg_g_day #* adg_g_day
+ log(CP_nutrition)
+  log(NDF_nutrition)
+ log(Ash_nutrition)
+ log(EE_nutrition)
+ (
1
# + bw_kg
#  + adg_g_day
# + CP_nutrition
#  +  NDF_nutrition
# + Ash_nutrition
#    + EE_nutrition
| B.Code)
, weights = 0.05 *goats.cc.f1.lo.NDF$T.Animals / mean(na.omit(goats.cc.f1.lo.NDF$T.Animals))
, data = goats.cc.f1.lo.NDF
)
gt.mod.1.hi.ndf <- lmer(
#feeding.level.g.d.kg.bw ~
feeding.rate ~
bw_kg
+  adg_g_day * adg_g_day
+ CP_nutrition
+  NDF_nutrition
+ log(Ash_nutrition)
+ log(EE_nutrition)
# + log(ADF_nutrition)
+ (
1
# + bw_kg
#  + adg_g_day
# + CP_nutrition
#  +  NDF_nutrition
# + Ash_nutrition
#   + EE_nutrition
| B.Code)
, weights = 1 * goats.cc.f1.hi.NDF$T.Animals / (max(na.omit(goats.cc.f1.hi.NDF$T.Animals)) - min(na.omit(goats.cc.f1.hi.NDF$T.Animals)))
, data = goats.cc.f1.hi.NDF
)
gt.mod.1.hi.ndf <- lmer(
feeding.level.g.d.kg.bw ~
feeding.rate ~
bw_kg
+  adg_g_day * adg_g_day
+ CP_nutrition
+  NDF_nutrition
+ log(Ash_nutrition)
+ log(EE_nutrition)
# + log(ADF_nutrition)
+ (
1
# + bw_kg
#  + adg_g_day
# + CP_nutrition
#  +  NDF_nutrition
# + Ash_nutrition
#   + EE_nutrition
| B.Code)
, weights = 1 * goats.cc.f1.hi.NDF$T.Animals / (max(na.omit(goats.cc.f1.hi.NDF$T.Animals)) - min(na.omit(goats.cc.f1.hi.NDF$T.Animals)))
, data = goats.cc.f1.hi.NDF
)
goats.cc.lo.NDF <- goats.cc.f1[goats.cc.f1$NDF_nutrition <= ndf.thresh ,]
goats.cc.hi.NDF <- goats.cc.f1[goats.cc.f1$NDF_nutrition >= ndf.thresh.hi ,]
gt.mod.1.lo.ndf <- lmer(
feeding.level.g.d.kg.bw ~
log(bw_kg)
+  adg_g_day #* adg_g_day
+ log(CP_nutrition)
+  log(NDF_nutrition)
+ log(Ash_nutrition)
+ log(EE_nutrition)
+ (
1
# + bw_kg
#  + adg_g_day
# + CP_nutrition
#  +  NDF_nutrition
# + Ash_nutrition
#    + EE_nutrition
| B.Code)
, weights = 0.05 *goats.cc.f1.lo.NDF$T.Animals / mean(na.omit(goats.cc.f1.lo.NDF$T.Animals))
, data = goats.cc.f1.lo.NDF
)
gt.mod.1.lo.ndf <- lmer(
feeding.level.g.d.kg.bw ~
log(bw_kg)
+  adg_g_day #* adg_g_day
+ log(CP_nutrition)
+  log(NDF_nutrition)
+ log(Ash_nutrition)
+ log(EE_nutrition)
+ (
1
# + bw_kg
#  + adg_g_day
# + CP_nutrition
#  +  NDF_nutrition
# + Ash_nutrition
#    + EE_nutrition
| B.Code)
, weights = 0.05 *goats.cc.lo.NDF$T.Animals / mean(na.omit(goats.cc.lo.NDF$T.Animals))
, data = goats.cc.lo.NDF
)
gt.mod.1.hi.ndf <- lmer(
feeding.level.g.d.kg.bw ~
feeding.rate ~
bw_kg
+  adg_g_day * adg_g_day
+ CP_nutrition
+  NDF_nutrition
+ log(Ash_nutrition)
+ log(EE_nutrition)
# + log(ADF_nutrition)
+ (
1
# + bw_kg
#  + adg_g_day
# + CP_nutrition
#  +  NDF_nutrition
# + Ash_nutrition
#   + EE_nutrition
| B.Code)
, weights = 1 * goats.cc.hi.NDF$T.Animals / (max(na.omit(goats.cc.hi.NDF$T.Animals)) - min(na.omit(goats.cc.f1.hi.NDF$T.Animals)))
, data = goats.cc.f1.hi.NDF
)
gt.mod.1.hi.ndf <- lmer(
feeding.level.g.d.kg.bw ~
feeding.rate ~
bw_kg
+  adg_g_day * adg_g_day
+ CP_nutrition
+  NDF_nutrition
+ log(Ash_nutrition)
+ log(EE_nutrition)
# + log(ADF_nutrition)
+ (
1
# + bw_kg
#  + adg_g_day
# + CP_nutrition
#  +  NDF_nutrition
# + Ash_nutrition
#   + EE_nutrition
| B.Code)
, weights = 1 * goats.cc.hi.NDF$T.Animals / (max(na.omit(goats.cc.hi.NDF$T.Animals)) - min(na.omit(goats.cc.f1.hi.NDF$T.Animals)))
, data = goats.cc.hi.NDF
)
goats.cc.hi.NDF$T.Animals
gt.mod.1.hi.ndf <- lmer(
feeding.level.g.d.kg.bw ~
feeding.rate ~
bw_kg
+  adg_g_day * adg_g_day
+ CP_nutrition
+  NDF_nutrition
+ log(Ash_nutrition)
+ log(EE_nutrition)
# + log(ADF_nutrition)
+ (
1
# + bw_kg
#  + adg_g_day
# + CP_nutrition
#  +  NDF_nutrition
# + Ash_nutrition
#   + EE_nutrition
| B.Code)
, weights = 1 * goats.cc.hi.NDF$T.Animals / (max(na.omit(goats.cc.hi.NDF$T.Animals)) - min(na.omit(goats.cc.hi.NDF$T.Animals)))
, data = goats.cc.hi.NDF
)
goats.cc.hi.NDF$T.Animals / (max(na.omit(goats.cc.hi.NDF$T.Animals)) - min(na.omit(goats.cc.hi.NDF$T.Animals)))
gt.mod.1.hi.ndf <- lmer(
feeding.level.g.d.kg.bw ~
feeding.rate ~
bw_kg
+  adg_g_day * adg_g_day
+ CP_nutrition
+  NDF_nutrition
+ log(Ash_nutrition)
+ log(EE_nutrition)
# + log(ADF_nutrition)
+ (
1
# + bw_kg
#  + adg_g_day
# + CP_nutrition
#  +  NDF_nutrition
# + Ash_nutrition
#   + EE_nutrition
| B.Code)
, weights = 1 * goats.cc.hi.NDF$T.Animals / (max(na.omit(goats.cc.hi.NDF$T.Animals)) - min(na.omit(goats.cc.hi.NDF$T.Animals)))
, data = goats.cc.hi.NDF
)
gt.mod.1.hi.ndf <- lmer(
feeding.level.g.d.kg.bw ~
#  feeding.rate ~
bw_kg
+  adg_g_day * adg_g_day
+ CP_nutrition
+  NDF_nutrition
+ log(Ash_nutrition)
+ log(EE_nutrition)
# + log(ADF_nutrition)
+ (
1
# + bw_kg
#  + adg_g_day
# + CP_nutrition
#  +  NDF_nutrition
# + Ash_nutrition
#   + EE_nutrition
| B.Code)
, weights = 1 * goats.cc.hi.NDF$T.Animals / (max(na.omit(goats.cc.hi.NDF$T.Animals)) - min(na.omit(goats.cc.hi.NDF$T.Animals)))
, data = goats.cc.hi.NDF
)
r2_nakagawa(gt.mod.1.hi.ndf)
# Plots
goats.cc.f1.hi.NDF$model <- 'hi.ndf'
goats.cc.f1.lo.NDF$model <- 'lo.ndf'
goats.cc.f1.hi.NDF$fitted <- predict(gt.mod.1.hi.ndf)
goats.cc.f1.lo.NDF$fitted <- predict(gt.mod.1.lo.ndf)
sheep.cc.hi.NDF$fitted <- predict(sp.mod.1.hi.NDF)
sheep.cc.lo.NDF$model <- 'low.ndf'
sheep.cc.hi.NDF$model <- 'hi.ndf'
gg.dat.all <- rbind(goats.cc.lo.NDF , goats.cc.hi.NDF , sheep.cc.lo.NDF , sheep.cc.hi.NDF )
goats.cc.lo.NDF
colnames(goats.cc.lo.NDF )
colnames(goats.cc.hi.NDF )
colnames(goats.cc.lo.NDF )
colnames(goats.cc.hi.NDF )
colnames(sheep.cc.lo.NDF)
colnames(goats.cc.hi.NDF )
colnames(sheep.cc.lo.NDF)
colnames(goats.cc.lo.NDF )
# Plots
goats.cc.hi.NDF$model <- 'hi.ndf'
goats.cc.lo.NDF$model <- 'lo.ndf'
goats.cc.hi.NDF$fitted <- predict(gt.mod.1.hi.ndf)
goats.cc.lo.NDF$fitted <- predict(gt.mod.1.lo.ndf)
colnames(goats.cc.lo.NDF )
colnames(goats.cc.hi.NDF )
colnames(sheep.cc.lo.NDF)
colnames(sheep.cc.hi.NDF )
gg.dat.all <- rbind(goats.cc.lo.NDF , goats.cc.hi.NDF , sheep.cc.lo.NDF , sheep.cc.hi.NDF )
gg.sheep.compare <- ggplot( gg.dat.all    ) +
geom_point( aes( x =   feeding.level.g.d.kg.bw, y = fitted        ) , ) +
geom_line(aes(x = feeding.level.g.d.kg.bw , y = feeding.level.g.d.kg.bw)) +
facet_grid( ~ model , scales = 'fixed')
gg.sheep.compare
goats.cc.lo.NDF$species <- 'Goat'
goats.cc.hi.NDF$species <-  'Goat'
sheep.cc.lo.NDF$species <- 'Sheep'
sheep.cc.hi.NDF$species <-  'Sheep'
gg.sheep.compare <- ggplot( gg.dat.all    ) +
geom_point( aes( x =   feeding.level.g.d.kg.bw, y = fitted        ) , ) +
geom_line(aes(x = feeding.level.g.d.kg.bw , y = feeding.level.g.d.kg.bw)) +
facet_grid( ~ model + species , scales = 'fixed')
gg.sheep.compare
gg.dat.all <- rbind(goats.cc.lo.NDF , goats.cc.hi.NDF , sheep.cc.lo.NDF , sheep.cc.hi.NDF )
gg.sheep.compare <- ggplot( gg.dat.all    ) +
geom_point( aes( x =   feeding.level.g.d.kg.bw, y = fitted        ) , ) +
geom_line(aes(x = feeding.level.g.d.kg.bw , y = feeding.level.g.d.kg.bw)) +
facet_grid( ~ model + species , scales = 'fixed')
gg.sheep.compare
save.image('dmi.estimate.RData')
